<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Audience extends CI_Controller {
  public function __construct()
	{
      parent::__construct();			
      $this->load->model('audience_model');
      $this->load->model('createprofileu/createprofileu_model');
	}
	
	public function index(){
      $id = $this->session->userdata('project_id');
      $iduser = $this->session->userdata('user_id');
      
      if($id == null){
          $id = 0;
      }else{
          $id = $this->session->userdata('project_id');
      }
      //cek session login
      if(!$this->session->userdata('user_id')) {
          redirect ('/login');
      }
      
      $data['profile'] = $this->audience_model->list_profile();
      $data['channel'] = $this->audience_model->list_channel();
      
      $typerole = $this->session->userdata('type_role');
      $data['listparent'] = $this->createprofileu_model->listdataprofilenew($typerole);
      
      $this->template->load('maintemplate', 'audience/views/audience_view', $data);
	}
	
	public function listsearch(){
//		print_r($_GET['q']); die;
          $typerole = $this->session->userdata('type_role');
		$list = $this->createprofileu_model->listsearch($_GET['q'], $typerole);
        if ( $list ) {			
			
			$this->output->set_content_type('application/json')->set_output(json_encode($list));
		} else {
			$result = array( 'Value not found!' );
			$this->output->set_content_type('application/json')->set_output(json_encode($result));
		}
	}
	
	public function list_audience(){	
      if( ! empty($_POST['start_date']) ) {
          $dt   = new DateTime();
          $date = $dt->createFromFormat('d/m/Y', $_POST['start_date']);
          $start_date = $date->format('Y-m-d');
      } else {
          $start_date = NULL;
      }
      
      if( !empty($_POST['stime']) ) {
          $start_time = $_POST['stime'];
      } else {
          $start_time = NULL;
      }
      
      if( !empty($_POST['etime']) ) {
          $end_time = $_POST['etime'];
      } else {
          $end_time = NULL;
      }
      
      if( !empty($_POST['tvs']) ) {
          $tvs = $_POST['tvs'];
      } else {
          $tvs = NULL;
      }   
      
      if( !empty($_POST['tvr']) ) {
          $tvr = $_POST['tvr'];
      } else {
          $tvr = NULL;
      }
      
      if( !empty($_POST['viewers']) ) {
          $viewers = $_POST['viewers'];
      } else {
          $viewers = NULL;
      }
      
      if( !empty($_POST['group']) ) {
          $group = $_POST['group'];
      } else {
          $group = NULL;
      }
      
      if( !empty($_POST['subgroup']) ) {
          $subgroup = $_POST['subgroup'];
      } else {
          $subgroup = NULL;
      }
      
      if( $this->input->get_post('draw') != FALSE )   {$draw   = $this->input->get_post('draw');}   else{$draw   = 1;}; 
      if( $this->input->get_post('length') != FALSE ) {$length = $this->input->get_post('length');} else{$length = 10;}; 
      if( $this->input->get_post('start') != FALSE )  {$start  = $this->input->get_post('start');}  else{$start  = 0;}; 				
      $order_fields = array('Field','Segment');
      $order = $this->input->get_post('order');
      if( ! empty($order[0]['dir']))    {$order_dir    = $order[0]['dir'];}    else{$order_dir    = 'asc';}; 
      if( ! empty($order[0]['column'])) {$order_column = $order[0]['column'] + 1;} else{$order_column = 0;}; 	
      
      $search = $this->input->get_post('search');		
      
      if( ! empty($search['value']) ) {
          $search_value = $search['value'];
      } else {
          $search_value = null;
      }
      
      // Build params for calling model 
      $params['starttime'] 	= $start_time;
      $params['endtime'] 		= $end_time;
      
      $params['limit'] 		= (int) $length;
      $params['offset'] 		= (int) $start;
      $params['order_column'] = $order_fields[$order_column];
      $params['order_dir'] 	= $order_dir;
      $params['filter'] 		= $search_value;
      $params['start_date'] 	= $start_date;
      $params['tvs']		= $tvs;
      $params['tvr']		= $tvr;
      $params['viewers']		= $viewers;
      $params['group']		= $group;
      $params['subgroup']		= $subgroup;  
      
      $arr_data = [];
      foreach($group as $helix){
          $HELIX_PROF = EXPLODE("=",$helix);
          $list_id = ""; 
          
          if(count($HELIX_PROF) < 2){
          
          } else {
              $list_KO = $this->audience_model->list_audience($params,$list_id,$HELIX_PROF);
              $arr_data[] =  $list_KO;
          }
          
          $arr_id = '';
      }                        
      
      $avg_viewers = 0;
      if ($arr_data){
          $data = array();
          
          foreach ( $arr_data as $k => $v ) {				
              array_push($data, 
                  array(
                      $v['data'][0]['FIELD'],	
                      $v['data'][0]['SEGMENT'],
                      "<p style='text-align:right'>".number_format(round($v['data'][0]['ANTV'],2), 2, ",", ".")."</p>",
                      "<p style='text-align:right'>".number_format(round($v['data'][0]['GTV'],2), 2, ",", ".")."</p>",
                      "<p style='text-align:right'>".number_format(round($v['data'][0]['INEWSTV'],2), 2, ",", ".")."</p>",
                      "<p style='text-align:right'>".number_format(round($v['data'][0]['IVM'],2), 2, ",", ".")."</p>",
                      "<p style='text-align:right'>".number_format(round($v['data'][0]['KOMPASTV'],2), 2, ",", ".")."</p>",
                      "<p style='text-align:right'>".number_format(round($v['data'][0]['METRO'],2), 2, ",", ".")."</p>",
                      "<p style='text-align:right'>".number_format(round($v['data'][0]['MNCTV'],2), 2, ",", ".")."</p>",
                      "<p style='text-align:right'>".number_format(round($v['data'][0]['NET'],2), 2, ",", ".")."</p>",
                      "<p style='text-align:right'>".number_format(round($v['data'][0]['RCTI'],2), 2, ",", ".")."</p>",
                      "<p style='text-align:right'>".number_format(round($v['data'][0]['OCHNL'],2), 2, ",", ".")."</p>",
                      "<p style='text-align:right'>".number_format(round($v['data'][0]['RTV'],2), 2, ",", ".")."</p>",
                      "<p style='text-align:right'>".number_format(round($v['data'][0]['SCTV'],2), 2, ",", ".")."</p>",
                      "<p style='text-align:right'>".number_format(round($v['data'][0]['TRANS'],2), 2, ",", ".")."</p>",
                      "<p style='text-align:right'>".number_format(round($v['data'][0]['TRANS7'],2), 2, ",", ".")."</p>",
                      "<p style='text-align:right'>".number_format(round($v['data'][0]['TVONE'],2), 2, ",", ".")."</p>",
                      "<p style='text-align:right'>".number_format(round($v['data'][0]['TVRI'],2), 2, ",", ".")."</p>"
                  )
              );
          }	
      }
      //print_r($data); die();
      $result["data"] = $data;	
      $this->output->set_content_type('Application/json')->set_output(json_encode($result));
	}

	public function list_chart_audience(){	
      if( ! empty($_POST['start_date']) ) {
          $dt   = new DateTime();
          $date = $dt->createFromFormat('d/m/Y', $_POST['start_date']);
          $start_date = $date->format('Y-m-d');
      } else {
          $start_date = NULL;
      }
      
      if( !empty($_POST['stime']) ) {
          $start_time = $_POST['stime'];
      } else {
          $start_time = NULL;
      }
      
      if( !empty($_POST['etime']) ) {
          $end_time = $_POST['etime'];
      } else {
          $end_time = NULL;
      }
      
      if( !empty($_POST['tvs']) ) {
          $tvs = $_POST['tvs'];
      } else {
          $tvs = NULL;
      }
      
      if( !empty($_POST['tvr']) ) {
          $tvr = $_POST['tvr'];
      } else {
          $tvr = NULL;
      }
      
      if( !empty($_POST['viewers']) ) {
          $viewers = $_POST['viewers'];
      } else {
          $viewers = NULL;
      }
      if( !empty($_POST['group']) ) {
          $group = $_POST['group'];
      } else {
          $group = NULL;
      }
      
      if( !empty($_POST['subgroup']) ) {
          $subgroup = $_POST['subgroup'];
      } else {
          $subgroup = NULL;
      }
      
      // Build params for calling model 
      $params['starttime'] 	= $start_time;
      $params['endtime'] 		= $end_time;
      $params['start_date'] 	= $start_date;
      $params['tvs']		= $tvs;
      $params['tvr']		= $tvr;
      $params['viewers']		= $viewers;
      $params['group']		= $group;
      $params['group2']		= '';
      $params['subgroup']		= $subgroup;
      //print_r($params); die();
      
      foreach($group as $helix){
          $HELIX_PROF = EXPLODE("=",$helix);
          $list_id = "";
          
          if(count($HELIX_PROF) < 2){
          
          } else {
              $list_KO = $this->audience_model->list_audience($params,$list_id,$HELIX_PROF);
              $arr_data[] =  $list_KO;
          }
      }
      //die();
      
      if ($arr_data){
          $data = array();
          
          foreach ( $arr_data as $k => $v ) {
              array_push($data, 
                  array(
                      $v['data'][0]['FIELD'],	
                      $v['data'][0]['SEGMENT'],
                      round($v['data'][0]['ANTV'],2),
                      round($v['data'][0]['GTV'],2),
                      round($v['data'][0]['INEWSTV'],2),
                      round($v['data'][0]['IVM'],2),
                      round($v['data'][0]['KOMPASTV'],2),
                      round($v['data'][0]['METRO'],2),
                      round($v['data'][0]['MNCTV'],2),
                      round($v['data'][0]['NET'],2),
                      round($v['data'][0]['RCTI'],2),
                      round($v['data'][0]['OCHNL'],2),
                      round($v['data'][0]['RTV'],2),
                      round($v['data'][0]['SCTV'],2),
                      round($v['data'][0]['TRANS'],2),
                      round($v['data'][0]['TRANS7'],2),
                      round($v['data'][0]['TVONE'],2),
                      round($v['data'][0]['TVRI'],2)
                  )
              );
          }	
      }
      
      //print_r($data); die();
      $result["data"] = $data;
      $this->output->set_content_type('Application/json')->set_output(json_encode($result));
	}
	
	public function list_chart_audience_new(){	
      if( ! empty($_POST['start_date']) ) {
          $dt   = new DateTime();
          $date = $dt->createFromFormat('d/m/Y', $_POST['start_date']);
          $start_date = $date->format('Y-m-d');
      } else {
          $start_date = NULL;
      }
      
      if( !empty($_POST['stime']) ) {
          $start_time = $_POST['stime'];
      } else {
          $start_time = NULL;
      }
      
      if( !empty($_POST['etime']) ) {
          $end_time = $_POST['etime'];
      } else {
          $end_time = NULL;
      }
      
      if( !empty($_POST['tvs']) ) {
          $tvs = $_POST['tvs'];
      } else {
          $tvs = NULL;
      }
      
      if( !empty($_POST['tvr']) ) {
          $tvr = $_POST['tvr'];
      } else {
          $tvr = NULL;
      }
      
      if( !empty($_POST['viewers']) ) {
          $viewers = $_POST['viewers'];
      } else {
          $viewers = NULL;
      }
      
      if( !empty($_POST['group2']) ) {
          $group = $_POST['group2'];
      } else {
          $group = NULL;
      }
      
      if( !empty($_POST['subgroup']) ) {
          $subgroup = $_POST['subgroup'];
      } else {
          $subgroup = NULL;
      }
      
      // Build params for calling model 
      $params['starttime'] 	= $start_time;
      $params['endtime'] 		= $end_time;
      $params['start_date'] 	= $start_date;
      $params['tvs']		= $tvs;
      $params['tvr']		= $tvr;
      $params['viewers']		= $viewers;
      $params['group']		= $group;
      
      $HELIX_PROF = EXPLODE("=",$group);
      $list_id = $this->audience_model->get_listid($params,$HELIX_PROF);
      $arr_id = '';
      
      foreach($list_id as $ass){
          $arr_id = $arr_id.'"'.$ass['people'].'",';		
      }
      
      $clean_arr = substr($arr_id, 0, -1);
      
      $list_KO = $this->audience_model->list_chart_audience($params,$clean_arr,$HELIX_PROF);
      
      $arr_data[] =  $list_KO;
      
      if ($arr_data){
          $data = array();
          
          foreach ( $arr_data as $k => $v ) {
              array_push($data, 
                  array(
                      $v['data'][0]['FIELD'],	
                      $v['data'][0]['SEGMENT'],
                      round($v['data'][0]['ANTV'],2),
                      round($v['data'][0]['GTV'],2),
                      round($v['data'][0]['INEWSTV'],2),
                      round($v['data'][0]['IVM'],2),
                      round($v['data'][0]['KOMPASTV'],2),
                      round($v['data'][0]['METRO'],2),
                      round($v['data'][0]['MNCTV'],2),
                      round($v['data'][0]['NET'],2),
                      round($v['data'][0]['RCTI'],2),
                      round($v['data'][0]['OCHNL'],2),
                      round($v['data'][0]['RTV'],2),
                      round($v['data'][0]['SCTV'],2),
                      round($v['data'][0]['TRANS'],2),
                      round($v['data'][0]['TRANS7'],2),
                      round($v['data'][0]['TVONE'],2),
                      round($v['data'][0]['TVRI'],2)
                  )
              );
          }	
      }
      
      //print_r($data); die();
      $result["data"] = $data;	
      $this->output->set_content_type('Application/json')->set_output(json_encode($result));
	}
}